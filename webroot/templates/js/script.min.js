window.onload = function() {
  if (typeof CanopyChanger === 'undefined') {
    var CanopyChanger = {};
    CanopyChanger.name = document.getElementById('screen');
    CanopyChanger.description = document.getElementById('Card-des');
    CanopyChanger.location = document.getElementById('Card-location');

    var CC = {};
    CC.name = document.querySelector('input.textbox.name');
    CC.description = document.querySelector('input.textbox.description');
    CC.location = document.querySelector('input.textbox.location');

    // 初回
    // CanopyChanger.name.innerHTML = CC.name.value;
    // CanopyChanger.description.innerHTML = CC.description.value;
    // CanopyChanger.location.innerHTML = CC.location.value;

    // event listener
    CC.name.addEventListener('keypress', ()=> {
      setTimeout(() => { CanopyChanger.name.innerHTML = CC.name.value; }, 1);
    });
    CC.name.addEventListener('change', () => {
      setTimeout(() => { CanopyChanger.name.innerHTML = CC.name.value; }, 1);
    });
    CC.name.addEventListener('paste', () => {
      setTimeout(() => {CanopyChanger.name.innerHTML = CC.name.value;}, 1);
    });

    CC.description.addEventListener('keypress', ()=> {
      setTimeout(() => { CanopyChanger.description.innerHTML = CC.description.value; }, 1);
    });
    CC.description.addEventListener('change', () => {
      setTimeout(() => { CanopyChanger.description.innerHTML = CC.description.value; }, 1);
    });
    CC.description.addEventListener('paste', () => {
      setTimeout(() => {CanopyChanger.description.innerHTML = CC.description.value;}, 1);
    });

    CC.location.addEventListener('keypress', ()=> {
      setTimeout(() => { CanopyChanger.location.innerHTML = CC.location.value; }, 1);
    });
    CC.location.addEventListener('change', () => {
      setTimeout(() => { CanopyChanger.location.innerHTML = CC.location.value; }, 1);
    });
    CC.location.addEventListener('paste', () => {
      setTimeout(() => {CanopyChanger.location.innerHTML = CC.location.value;}, 1);
    });
  }
}

// ToDo:文字入力の反映

if (typeof COUNTER === 'undefined') {
  var COUNTER = {};
  COUNTER.name = 0;
  COUNTER.description = 0;
  COUNTER.location = 0;

  // ToDo:文字数カウント
  function counter(target) {
    var text = document.querySelector('input.textbox.' + target).val();
    return text.length;
  }
}

// イベント追加

// document.onload = function () {
//   ["name", "location", "description"].forEach(function (item) {
//     COUNTER.counter(item);
//   });
// }

$(function () {

  var DEFAULTVAL = {};
  DEFAULTVAL.name = $('input.textbox.name').attr('placeholder');
  DEFAULTVAL.description = $('input.textbox.description').attr('placeholder');
  DEFAULTVAL.location = $('input.textbox.location').attr('placeholder');

  // change detector
  $('input.textbox').on('keypress change paste', ()=>{
    if ( DEFAULTVAL.name        != null
      && DEFAULTVAL.description != null
      && DEFAULTVAL.location    != null
      && DEFAULTVAL.name        == $('input.textbox.name').val()
      && DEFAULTVAL.description == $('input.textbox.description').val()
      && DEFAULTVAL.location    == $('input.textbox.location').val()
    ) {
      $('button.button.submit').attr('disabled', true);
    }else{
      $('button.button.submit').removeAttr('disabled');
    }
  });




  function getStatus() {
    $.getJSON('/getStatus', null)
      .then(
      function (data) {
        console.log(data);
        $('input.textbox.name').val(data['nam']);
        $('input.textbox.description').val(data['des']);
        $('input.textbox.location').val(data['loc']);

        $('#screen').text(data['nam']);
        $('#Card-des').text(data['des']);
        $('#Card-location').text(data['loc']);

        DEFAULTVAL.name = data['nam'];
        DEFAULTVAL.description = data['des'];
        DEFAULTVAL.location = data['loc'];
      },
      function (data, status) {
        console.log('取得失敗');
        console.log(status);
      }
    );
  }


  function setStatus() {
    // submit buttonがdisabledのときは実行しない
    if ($('button.button.submit').is(':disabled') ) return false;

    $('button.button.submit').attr('disabled', true);
    // set transrate data
    var data = {};
    if (DEFAULTVAL.name != $('input.textbox.name').val()) data['name'] = $('input.textbox.name').val()
    if (DEFAULTVAL.description != $('input.textbox.description').val()) data['description'] = $('input.textbox.description').val()
    if (DEFAULTVAL.location != $('input.textbox.location').val()) data['location'] = $('input.textbox.location').val()
    if ($('input#allow_tweet').is(':checked')) data['tweet'] = true;


    console.log(JSON.stringify(data));
    $.ajax({
      url: '/setStatus',
      type: 'POST',
      data: JSON.stringify(data),
      dataType: 'json',
      contentType: 'application/json; charset=utf-8'
    })
    .then( (data) => {
      // success
      console.log('送信成功');
      $('input.textbox.name').val(data['nam']);
      $('input.textbox.description').val(data['des']);
      $('input.textbox.location').val(data['loc']);

      $('#screen').text(data['nam']);
      $('#Card-des').text(data['des']);
      $('#Card-location').text(data['loc']);
      DEFAULTVAL.name = data['nam'];
      DEFAULTVAL.description = data['des'];
      DEFAULTVAL.location = data['loc'];
    })
    .catch( () => {console.log('送信失敗')} )
    .then( () =>{
      // allways
      $('button.button.submit').removeAttr('disabled');
    } );
  }

  $('button.button.submit').on('click', () =>
  setStatus());
  return false;
});
